<Window x:Class="SoundCloudDownloader.Views.RootView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SoundCloudDownloader.Views"
        xmlns:viewModels="clr-namespace:SoundCloudDownloader.ViewModels"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        Width="600"
        Height="550"
        Background="{DynamicResource MaterialDesignBackground}"
        FocusManager.FocusedElement="{Binding ElementName=QueryTextBox}"
        Icon="/SoundCloudDownloader;component/favicon.ico"
        Style="{DynamicResource MaterialDesignRoot}"
        WindowStartupLocation="CenterScreen"
        Title="RootView">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- you only need bring this resource in if you want to specify the circular style statically -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="Normal" ProgressValue="{Binding ProgressManager.Progress}" />
    </Window.TaskbarItemInfo>
    <Window.DataContext>
        <viewModels:RootViewModel />
    </Window.DataContext>
    <materialDesign:DialogHost
        CloseOnClickAway="True"
        SnackbarMessageQueue="{Binding Notifications}"
        Style="{DynamicResource MaterialDesignEmbeddedDialogHost}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Toolbar  -->
            <Grid Grid.Row="0" Background="{DynamicResource MaterialDesignDarkBackground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  Query and process query button  -->
                <materialDesign:Card Grid.Column="0" Margin="12,12,0,12">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!--  Query  -->
                        <TextBox
                            x:Name="QueryTextBox"
                            Grid.Column="0"
                            Margin="6"
                            VerticalAlignment="Bottom"
                            materialDesign:HintAssist.Hint="URL (press Shift+Enter to add multiple)"
                            materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                            AcceptsReturn="True"
                            BorderThickness="0"
                            FontSize="16"
                            MaxLines="4"
                            PreviewKeyDown="QueryTextBox_OnPreviewKeyDown"
                            Text="{Binding Query, UpdateSourceTrigger=PropertyChanged}"
                            VerticalScrollBarVisibility="Auto" />

                        <!--  Process query button  -->
                        <Button
                            Grid.Column="1"
                            Margin="0,6,6,6"
                            Padding="4"
                            Command="{Binding ProcessQueryCommand}"
                            IsDefault="True"
                            Style="{DynamicResource MaterialDesignFlatButton}"
                            ToolTip="Process query (Enter)">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="ArrowRight" />
                        </Button>
                    </Grid>
                </materialDesign:Card>

                <!--  Settings button  -->
                <Button
                    Grid.Column="1"
                    Margin="6"
                    Padding="4"
                    Command="{Binding ShowSettingsCommand}"
                    Foreground="{DynamicResource MaterialDesignDarkForeground}"
                    Style="{DynamicResource MaterialDesignFlatButton}"
                    ToolTip="Settings">
                    <Button.Resources>
                        <SolidColorBrush x:Key="MaterialDesignFlatButtonClick" Color="#4C4C4C" />
                    </Button.Resources>
                    <materialDesign:PackIcon
                        Width="24"
                        Height="24"
                        Kind="Settings" />
                </Button>
            </Grid>

            <!--  Progress  -->
            <ProgressBar
                Grid.Row="1"
                Background="{DynamicResource MaterialDesignDarkBackground}"
                IsIndeterminate="{Binding IsProgressIndeterminate}"
                 />

            <!--  Content  -->
            <Grid Grid.Row="2" Background="{DynamicResource MaterialDesignCardBackground}">

                <!--  Placeholder  -->
                <TextBlock
                    Margin="32"
                    FontSize="18"
                    FontWeight="Light"
                    Text="Copy-paste URL to start downloading"
                    TextAlignment="Center"
                    TextWrapping="Wrap"
                    Visibility="{Binding Downloads.Count}" />

                <!--  Downloads  -->
                <DataGrid 
                    Background="{DynamicResource MaterialDesignCardBackground}"
                    ColumnWidth="Auto"
                    HorizontalScrollBarVisibility="Disabled"
                    ItemsSource="{Binding Downloads}"
                    ScrollViewer.CanContentScroll="False"
                    VerticalScrollBarVisibility="Auto"
                    Visibility="{Binding Downloads.Count}">
                    <DataGrid.RowStyle>
                        <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}">
                            <!--<Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>-->
                            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                            
                            <!--  Context menu  -->
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem
                                            Command="{Binding PlacementTarget.Tag.RemoveDownloadCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                            CommandParameter="{Binding}"
                                            Header="Remove download" />
                                        <MenuItem Command="{Binding PlacementTarget.Tag.RemoveInactiveDownloadsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Remove all inactive downloads" />
                                        <MenuItem Command="{Binding PlacementTarget.Tag.RemoveSuccessfulDownloadsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Remove all successful downloads" />
                                        <MenuItem Command="{Binding PlacementTarget.Tag.RestartFailedDownloadsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Restart all failed downloads" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>

                            <!--  Triggers  -->
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <!--  Columns  -->
                    <DataGrid.Columns>
                        <!--  Thumbnail  -->
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image
                                        Width="32"
                                        VerticalAlignment="Center"
                                        Source="{Binding Track.ArtworkUrl}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  File name  -->
                        <DataGridTemplateColumn
                            Width="*"
                            Header="File"
                            SortMemberPath="FileName">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontSize="14"
                                        Foreground="{DynamicResource MaterialDesignBody}"
                                        Text="{Binding FileName}"
                                        TextTrimming="CharacterEllipsis"
                                        ToolTip="{Binding FileName}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  Status  -->
                        <DataGridTemplateColumn
                            MinWidth="100"
                            Header="Status"
                            SortMemberPath="ProgressOperation.Progress">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <!--  Progress  -->
                                        <ProgressBar
                                            Grid.Column="0"
                                            Margin="0,0,6,0"
                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                            Maximum="1"
                                            Minimum="0"
                                            Value="{Binding ProgressOperation.Progress, Mode=OneWay}">
                                            <ProgressBar.Style>
                                                <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                                    <Style.Triggers>
                                                        <!--  Hide when not downloading  -->
                                                        <DataTrigger Binding="{Binding IsActive}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>

                                                        <!--  Hide when progress is zero  -->
                                                        <DataTrigger Binding="{Binding ProgressOperation.Progress}" Value="0">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ProgressBar.Style>
                                        </ProgressBar>

                                        <!--  Status  -->
                                        <TextBlock
                                            Grid.Column="1"
                                            VerticalAlignment="Center"
                                            TextTrimming="CharacterEllipsis">
                                            <TextBlock.Style>
                                                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <!--  Downloading  -->
                                                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                            <Setter Property="Text" Value="{Binding ProgressOperation.Progress, StringFormat=\{0:P1\}}" />
                                                        </DataTrigger>

                                                        <!--  Pending  -->
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsActive}" Value="True" />
                                                                <Condition Binding="{Binding ProgressOperation.Progress}" Value="0" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Text" Value="Pending..." />
                                                        </MultiDataTrigger>

                                                        <!--  Successful  -->
                                                        <DataTrigger Binding="{Binding IsSuccessful}" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                                                            <Setter Property="Text" Value="✓ Done" />
                                                        </DataTrigger>

                                                        <!--  Canceled  -->
                                                        <DataTrigger Binding="{Binding IsCanceled}" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource CanceledBrush}" />
                                                            <Setter Property="Text" Value="✗ Canceled" />
                                                        </DataTrigger>

                                                        <!--  Failed  -->
                                                        <DataTrigger Binding="{Binding IsFailed}" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource FailedBrush}" />
                                                            <Setter Property="Text" Value="✗ Failed" />
                                                            <Setter Property="ToolTip" Value="{Binding FailReason}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  Buttons  -->
                        <DataGridTemplateColumn MinWidth="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal">
                                        <!--  Cancel  -->
                                        <Button
                                            Padding="4,0,4,0"
                                            VerticalAlignment="Center"
                                            Command="{Binding CancelCommand}"
                                            Style="{DynamicResource MaterialDesignFlatButton}"
                                            ToolTip="Cancel download"
                                            Visibility="{Binding CanCancel}">
                                            <materialDesign:PackIcon
                                                Width="24"
                                                Height="24 "
                                                Kind="CloseCircleOutline" />
                                        </Button>

                                        <!--  Restart  -->
                                        <Button
                                            Padding="4,0,4,0"
                                            VerticalAlignment="Center"
                                            Command="{Binding RestartCommand}"
                                            Style="{DynamicResource MaterialDesignFlatButton}"
                                            ToolTip="Restart download"
                                            Visibility="{Binding CanRestart}">
                                            <materialDesign:PackIcon
                                                Width="24"
                                                Height="24 "
                                                Kind="Restart" />
                                        </Button>

                                        <!--  Show file  -->
                                        <Button
                                            Padding="4,0,4,0"
                                            VerticalAlignment="Center"
                                            Command="{Binding ShowFileCommand}"
                                            Style="{DynamicResource MaterialDesignFlatButton}"
                                            ToolTip="Navigate to file"
                                            Visibility="{Binding CanShowFile}">
                                            <materialDesign:PackIcon
                                                Width="24"
                                                Height="24 "
                                                Kind="FileFindOutline" />
                                        </Button>

                                        <!--  Open file  -->
                                        <Button
                                            Padding="4,0,4,0"
                                            VerticalAlignment="Center"
                                            Command="{Binding OpenFileCommand}"
                                            Style="{DynamicResource MaterialDesignFlatButton}"
                                            ToolTip="Play"
                                            Visibility="{Binding CanOpenFile}">
                                            <materialDesign:PackIcon
                                                Width="24"
                                                Height="24 "
                                                Kind="PlayCircleOutline" />
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <!--  Notifications  -->
                <materialDesign:Snackbar MessageQueue="{Binding Notifications}" />
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</Window>
